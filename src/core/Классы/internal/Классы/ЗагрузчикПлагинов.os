#Использовать logos

Перем ИндексУстановленныхПлагинов; // Соответствие 
Перем Лог; // Объект - Логирование
Перем ДоступныйИнтерфейсПлагинов; // Объект.ИнтерфейсОбъекта - интерфейс плагинов
Перем КаталогПлагинов; // Строка - каталог пакетов плагинов

#Область Экспортные_методы

// Устанавливает каталог плагинов
//
// Параметры:
//   ПутьККаталогу - Строка - полный путь к каталогу плагинов
//
Процедура УстановитьКаталогПлагинов(Знач ПутьККаталогу) Экспорт
	КаталогПлагинов = ПутьККаталогу;
КонецПроцедуры

// Выполняет загрузки плагинов в индекс
//
Процедура ЗагрузитьПлагины() Экспорт
	
	ОбновитьИндексПлагинов();

КонецПроцедуры

// Возвращает загруженный индекс плагинов
//
//  Возвращаемое значение:
//   Соответствие - набор плагинов 
//                   * ключ - Строка - имя плагина
//                   * значение - Объект - ссылка на произвольный объект 
//
Функция ИндексПлагинов() Экспорт
	Возврат ИндексУстановленныхПлагинов;
КонецФункции

#КонецОбласти

#Область Вспомогательные_процедуры_и_функции

Процедура ОбновитьИндексПлагинов() 

	Лог.Отладка("Обновление индекса плагина из каталога <%1>", КаталогПлагинов);
	ИндексУстановленныхПлагинов = Новый Соответствие;

	КаталогиПлагинов = НайтиФайлы(КаталогПлагинов, ПолучитьМаскуВсеФайлы(), Ложь); 

	Для каждого Каталоги Из КаталогиПлагинов Цикл
		
		Если Не Каталоги.ЭтоКаталог() Тогда
			Продолжить;
		КонецЕсли;
		
		ЗагрузитьПлагин(Каталоги.ПолноеИмя);

	КонецЦикла;

	Лог.Отладка("В индекс плагинов добавлено <%1> плагинов", ИндексУстановленныхПлагинов.Количество());

КонецПроцедуры

Процедура ЗагрузитьПлагин(Знач Путь)

	Лог.Отладка("Загружаю плагины из каталога <%1>", Путь);

	ФайлМанифеста = Новый Файл(ОбъединитьПути(Путь, "lib.config"));
	
	Если ФайлМанифеста.Существует() Тогда
		Лог.Отладка("Обрабатываем по манифесту");
		ДобавитьКлассыПлагинов(ФайлМанифеста.ПолноеИмя, Путь);
	Иначе
		Лог.Отладка("Плагины из каталога <%1> не могут быть загружены - не найден файл <lib.config>", Путь);
	КонецЕсли;

КонецПроцедуры

Процедура ДобавитьКлассыПлагинов(Знач Файл, Знач Путь)
	
	Чтение = Новый ЧтениеXML;
	Чтение.ОткрытьФайл(Файл);
	Чтение.ПерейтиКСодержимому();
	
	Если Чтение.ЛокальноеИмя <> "package-def" Тогда
		Чтение.Закрыть();
		Возврат;
	КонецЕсли;
	
	Пока Чтение.Прочитать() Цикл
		
		Если Чтение.ТипУзла = ТипУзлаXML.Комментарий Тогда

			Продолжить;

		КонецЕсли;

		Если Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
		
			Если Чтение.ЛокальноеИмя = "class" Тогда
				ФайлКласса = Новый Файл(ОбъединитьПути(Путь, Чтение.ЗначениеАтрибута("file")));
				Если ФайлКласса.Существует() 
					И ФайлКласса.ЭтоФайл() Тогда
					Идентификатор = Чтение.ЗначениеАтрибута("name");
					Если Не ПустаяСтрока(Идентификатор) Тогда
						ДобавитьПлагинВИндекс(Идентификатор, ФайлКласса.ПолноеИмя);
					КонецЕсли;
				Иначе
					ВызватьИсключение "Не найден файл " + ФайлКласса.ПолноеИмя + ", указанный в манифесте";
				КонецЕсли;
				
				Чтение.Прочитать(); // в конец элемента

			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Чтение.Закрыть();
	
КонецПроцедуры

Процедура ДобавитьПлагинВИндекс(Знач ИмяКлассаПлагина, Знач ИмяФайлаКласса)
	
	Лог.Отладка("Добавляю плагин <%1> в индекс плагинов", ИмяКлассаПлагина);

	Попытка
		НовыйПлагин = Новый ПлагинСинхронизации(ИмяФайлаКласса, ИмяКлассаПлагина, ДоступныйИнтерфейсПлагинов);
	Исключение
		Лог.Отладка("Ошибка добавления плагина в индекс плагинов. По причине: <%1>", ОписаниеОшибки());
		Возврат;
	КонецПопытки;

	ИндексУстановленныхПлагинов.Вставить(НовыйПлагин.Имя(), НовыйПлагин);

КонецПроцедуры

Процедура ПриСозданииОбъекта(Знач ВходящийКаталогПлагинов = Неопределено)
	
	КаталогПлагинов = ВходящийКаталогПлагинов;
	ДоступныйИнтерфейсПлагинов = Новый ИнтерфейсПлагинов().Интерфейс();
	Лог = Логирование.ПолучитьЛог("oscript.lib.gitsync3.plugins.loader");

КонецПроцедуры

#КонецОбласти
